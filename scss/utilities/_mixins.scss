
//Media queries

@mixin mq($break) {
  @if $break == "small" {
    @media (min-width: $brkpnt-sm) and (max-width: $brkpnt-m) {
      @content;
    }
  }

  @else if $break == "medium" {
    @media (min-width: $brkpnt-m + 1) {
      @content;
    }
  }

  @else if $break == "large" {
    @media (min-width: $brkpnt-lg) {
      @content;
    }
  }
}

//Flexbox

@mixin flexbox($display, $flex-wrap, $flex-direction) {
  display: $display;
  flex-wrap: $flex-wrap;
  flex-direction: $flex-direction;
}


@mixin justify-content($justify) {
  justify-content: $justify;
}

@mixin align-items($align) {
  align-items: $align;
}

//FLex items


@mixin align-self($align) {
  align-self: $align;
}


@mixin g-columns {
  @for $i from 1 through $g-col-count {
    $context: g-context($g-col-width, $g-col-count ,$g-gutter-width) !global;
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));

    // Generate column modifier classes
    &--#{$i} {
      width: percentage($target / $context);
    }
  }
}


//button background colors

@mixin bg-colors($map) {
	@each $theme, $color in $map {
		&--#{$theme}.theme__colors {
			background-color: $color;
		}
	}
}

// margin between buttons

@mixin doubly($margin: 1em) {
	& + & {
	  margin-left: $margin;
    @content;
	}
}
